(let (var-pat const-pat op-pat open-pat close-pat)
   (setq const-pat '("в┐" "в╩" "в╦" "в╠" "в▌" "variable" "constant" "nonvoid" "nv-varseq" "varseq" "exp" "closed-exp" "is-in" "unit-prop" "not-prop" "and-prop" "or-prop" "prop" "denotes" "judg" "s-judg" "b-judg"))
   (setq op-pat '("вк" "=" "вс"))
   (cal-deftokens))


(DefClass 'bj '(or (infix (infix term "вк" term) ":" (or "unit-prop" "not-prop" "and-prop" "or-prop" "prop" "s-judg" "b-judg" "judg")) (infix (infix term "вс" term) ":" "prop") (infix term "=" term) (infix term ":" "variable") (infix term ":" "constant") (infix term ":" "nonvoid") (infix term ":" "nv-varseq") (infix term ":" "varseq") (infix term ":" "closed-exp") (infix term "exp" term) (infix term "is-in" term) (infix (infix term ":" "prop") "denotes" term)))


(DefClass 'term '(or varref svar (paren "б╘" unitlist)))


(DefClass 'tex-bj '(or (tex-infix (tex-infix tex-term "вк" tex-term) ":" (or "unit-prop" "not-prop" "and-prop" "or-prop" "prop" "s-judg" "b-judg" "judg")) (tex-infix (tex-infix tex-term "вс" tex-term) ":" "prop") (tex-infix tex-term "=" tex-term) (tex-infix tex-term ":" "variable") (tex-infix tex-term ":" "constant") (tex-infix tex-term ":" "nonvoid") (tex-infix tex-term ":" "nv-varseq") (tex-infix tex-term ":" "varseq") (tex-infix tex-term ":" "closed-exp") (tex-infix tex-term "exp" tex-term) (tex-infix tex-term "is-in" tex-term) (tex-infix (tex-infix tex-term ":" "prop") "denotes" tex-term)))


(DefClass 'tex-term '(or tex-varref (tex-paren "б╘" tex-unitlist)))


(setq PrimExpPat PEP)

(DefGame 'PropDefEq '(("prop-defeq" (si ta ph) ((op ":" 2806) ((op "вс" 2801) (var "si" 2798) (var "ta" 2803)) (op "prop" 2808)) ((op "denotes" 2831) ((op ":" 2825) (var "si" 2823) (op "prop" 2826)) (var "ph" 2839)) ((op "denotes" 2851) ((op ":" 2845) (var "ta" 2843) (op "prop" 2846)) (var "ph" 2859))) ("prop-denotes" (si ph mu) ((op "denotes" 2733) ((op ":" 2727) (var "si" 2725) (op "prop" 2728)) (var "ph" 2741)) ((op ":" 2754) ((op "вк" 2750) (var "si" 2747) (var "mu" 2752)) (op "prop" 2755)) ((op "=" 2764) (var "mu" 2761) (var "ph" 2766))) ("judg4" (si ta mu nu) ((op ":" 2653) ((op "вк" 2639) (qq ((svar "si") (unit (op "в═" 2634)) (svar "mu"))) (qq ((unit (paren "<" (op "в═" 2642) (op "," 2643) (svar "mu") (op "," 2647) (svar "nu")))))) (op "judg" 2654)) ((op ":" 2673) ((op "вк" 2670) (var "si" 2668) (var "mu" 2671)) (op "b-judg" 2674)) ((op ":" 2687) ((op "вк" 2684) (var "ta" 2682) (var "mu" 2685)) (op "judg" 2688))) ("judg3" (si ta mu nu) ((op ":" 2565) ((op "вк" 2551) (qq ((svar "si") (unit (op "в═" 2546)) (svar "mu"))) (qq ((unit (paren "<" (op "в═" 2554) (op "," 2555) (svar "mu") (op "," 2559) (svar "nu")))))) (op "judg" 2566)) ((op ":" 2585) ((op "вк" 2582) (var "si" 2580) (var "mu" 2583)) (op "s-judg" 2586)) ((op ":" 2599) ((op "вк" 2596) (var "ta" 2594) (var "mu" 2597)) (op "judg" 2600))) ("judg2" (si mu) ((op ":" 2494) ((op "вк" 2491) (var "si" 2489) (var "mu" 2492)) (op "judg" 2495)) ((op ":" 2508) ((op "вк" 2505) (var "si" 2503) (var "mu" 2506)) (op "b-judg" 2509))) ("judg1" (si mu) ((op ":" 2447) ((op "вк" 2444) (var "si" 2442) (var "mu" 2445)) (op "judg" 2448)) ((op ":" 2461) ((op "вк" 2458) (var "si" 2456) (var "mu" 2459)) (op "s-judg" 2462))) ("b-judg" (si mu) ((op ":" 2400) ((op "вк" 2397) (var "si" 2395) (var "mu" 2398)) (op "b-judg" 2401)) ((op ":" 2416) ((op "вк" 2413) (var "si" 2411) (var "mu" 2414)) (op "prop" 2417))) ("s-judg3" (al si mu) ((op ":" 2333) ((op "вк" 2320) (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "si"))))) (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "mu")))))) (op "s-judg" 2334)) ((op ":" 2352) (var "al" 2350) (op "variable" 2353)) ((op ":" 2368) ((op "вк" 2365) (var "si" 2363) (var "mu" 2366)) (op "judg" 2369))) ("s-judg2" (si mu) ((op ":" 2258) ((op "вк" 2254) (qq ((unit (paren "(" (svar "si"))))) (var "mu" 2255)) (op "s-judg" 2260)) ((op ":" 2277) ((op "вк" 2273) (var "si" 2270) (var "mu" 2275)) (op "judg" 2278))) ("s-judg1" (al) ((op ":" 2202) ((op "вк" 2198) (var "al" 2195) (var "al" 2200)) (op "s-judg" 2203)) ((op ":" 2215) (var "al" 2213) (op "variable" 2216))) ("prop2" (si ta mu nu) ((op ":" 2126) ((op "вк" 2108) (qq ((svar "si") (unit (op "в┐" 2103)) (svar "ta"))) (qq ((unit (paren "<" (op "в┐" 2112) (op "," 2113) (svar "mu") (op "," 2118) (svar "nu")))))) (op "prop" 2128)) ((op ":" 2151) ((op "вк" 2146) (var "si" 2143) (var "mu" 2148)) (op "or-prop" 2153)) ((op ":" 2169) ((op "вк" 2165) (var "ta" 2162) (var "nu" 2167)) (op "prop" 2170))) ("prop1" (si mu) ((op ":" 2045) ((op "вк" 2040) (var "si" 2038) (var "mu" 2042)) (op "prop" 2047)) ((op ":" 2063) ((op "вк" 2058) (var "si" 2055) (var "mu" 2060)) (op "or-prop" 2065))) ("or-prop2" (si ta mu nu) ((op ":" 1961) ((op "вк" 1943) (qq ((svar "si") (unit (op "в╦" 1938)) (svar "ta"))) (qq ((unit (paren "<" (op "в╦" 1947) (op "," 1948) (svar "mu") (op "," 1953) (svar "nu")))))) (op "or-prop" 1963)) ((op ":" 1989) ((op "вк" 1984) (var "si" 1981) (var "mu" 1986)) (op "and-prop" 1991)) ((op ":" 2008) ((op "вк" 2004) (var "ta" 2001) (var "nu" 2006)) (op "or-prop" 2009))) ("or-prop1" (si mu) ((op ":" 1873) ((op "вк" 1868) (var "si" 1866) (var "mu" 1870)) (op "or-prop" 1875)) ((op ":" 1894) ((op "вк" 1889) (var "si" 1886) (var "mu" 1891)) (op "and-prop" 1896))) ("and-prop2" (si ta mu nu) ((op ":" 1781) ((op "вк" 1763) (qq ((svar "si") (unit (op "в╩" 1758)) (svar "ta"))) (qq ((unit (paren "<" (op "в╩" 1767) (op "," 1768) (svar "mu") (op "," 1773) (svar "nu")))))) (op "and-prop" 1783)) ((op ":" 1809) ((op "вк" 1804) (var "si" 1801) (var "mu" 1806)) (op "not-prop" 1811)) ((op ":" 1829) ((op "вк" 1824) (var "ta" 1821) (var "nu" 1826)) (op "and-prop" 1831))) ("and-prop1" (si mu) ((op ":" 1691) ((op "вк" 1686) (var "si" 1684) (var "mu" 1688)) (op "and-prop" 1693)) ((op ":" 1713) ((op "вк" 1708) (var "si" 1705) (var "mu" 1710)) (op "not-prop" 1715))) ("not-prop2" (si mu) ((op ":" 1626) ((op "вк" 1613) (qq ((unit (op "в╠" 1608)) (svar "si"))) (qq ((unit (paren "<" (op "в╠" 1617) (op "," 1618) (svar "mu")))))) (op "not-prop" 1628)) ((op ":" 1648) ((op "вк" 1643) (var "si" 1640) (var "mu" 1645)) (op "not-prop" 1650))) ("not-prop1" (si mu) ((op ":" 1549) ((op "вк" 1544) (var "si" 1542) (var "mu" 1546)) (op "not-prop" 1551)) ((op ":" 1571) ((op "вк" 1566) (var "si" 1563) (var "mu" 1568)) (op "unit-prop" 1573))) ("unit-prop4" (si mu) ((op ":" 1487) ((op "вк" 1482) (qq ((unit (paren "[" (svar "si"))))) (var "mu" 1484)) (op "unit-prop" 1489)) ((op ":" 1510) ((op "вк" 1505) (var "si" 1502) (var "mu" 1507)) (op "judg" 1512))) ("unit-prop3" (si mu) ((op ":" 1420) ((op "вк" 1415) (qq ((unit (paren "(" (svar "si"))))) (var "mu" 1417)) (op "unit-prop" 1422)) ((op ":" 1443) ((op "вк" 1438) (var "si" 1435) (var "mu" 1440)) (op "prop" 1445))) ("unit-prop2" (al) ((op ":" 1357) ((op "вк" 1353) (var "al" 1350) (var "al" 1355)) (op "unit-prop" 1358)) ((op ":" 1373) (var "al" 1371) (op "variable" 1374))) ("unit-prop1" () ((op ":" 1314) ((op "вк" 1309) ((unit (op "в▌" 1307))) ((unit (op "в▌" 1312)))) (op "unit-prop" 1315))) ("cons-list1" (mu nu ph ps) ((op "=" 1234) (qq ((unit (paren "<" (svar "mu") (op "," 1228) (svar "nu"))))) (qq ((unit (paren "<" (svar "ph") (op "|" 1240) (svar "ps")))))) ((op "=" 1258) (var "mu" 1256) (var "ph" 1259)) ((op ":" 1265) (var "nu" 1263) (op "nonvoid" 1266)) ((op "=" 1281) (qq ((unit (paren "<" (svar "nu"))))) (var "ps" 1282))) ("cons-list0" (mu ph) ((op "=" 1171) (qq ((unit (paren "<" (svar "mu"))))) (qq ((unit (paren "<" (svar "ph") (op "|" 1177) (op "nil" 1178)))))) ((op "=" 1188) (var "mu" 1186) (var "ph" 1189))) ("nil-list" () ((op "=" 1129) ((unit (paren "<"))) ((unit (op "nil" 1132))))) ("abs-list" (al mu ph) ((op "=" 1070) (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "mu"))))) (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "ph")))))) ((op ":" 1088) (var "al" 1086) (op "variable" 1089)) ((op "=" 1102) (var "mu" 1099) (var "ph" 1104))) ("pair-list" (mu nu ph ps) ((op "=" 995) (qq ((unit (paren "<" (svar "mu") (op "|" 988) (svar "nu"))))) (qq ((unit (paren "<" (svar "ph") (op "|" 1003) (svar "ps")))))) ((op "=" 1021) (var "mu" 1019) (var "ph" 1022)) ((op "=" 1028) (var "nu" 1026) (var "ps" 1029))) ("const-list" (ga) ((op "=" 932) (var "ga" 929) (var "ga" 934)) ((op ":" 942) (var "ga" 940) (op "constant" 943))) ("var-list" (al) ((op "=" 887) (var "al" 884) (var "al" 889)) ((op ":" 897) (var "al" 895) (op "variable" 898))) ("closed-exp" (ph) ((op ":" 838) (var "ph" 836) (op "closed-exp" 839)) ((op "exp" 855) () (var "ph" 859))) ("abs-exp1" (Ga al ph) ((op "exp" 761) (var "Ga" 758) (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "ph")))))) ((op ":" 783) (var "al" 781) (op "variable" 784)) ((op "exp" 804) (qq ((svar "Ga") (unit (op "," 798)) (svar "al"))) (var "ph" 808))) ("abs-exp0" (al ph) ((op "exp" 689) () (qq ((unit (paren "(" (svar "al"))) (unit (paren "[" (svar "ph")))))) ((op ":" 711) (var "al" 709) (op "variable" 712)) ((op "exp" 725) (var "al" 722) (var "ph" 729))) ("pair-exp" (Ga ph ps) ((op "exp" 624) (var "Ga" 621) (qq ((unit (paren "<" (svar "ph") (op "|" 633) (svar "ps")))))) ((op "exp" 645) (var "Ga" 642) (var "ph" 649)) ((op "exp" 656) (var "Ga" 653) (var "ps" 660))) ("const-exp" (Ga ga) ((op "exp" 562) (var "Ga" 559) (var "ga" 566)) ((op ":" 574) (var "Ga" 572) (op "varseq" 575)) ((op ":" 585) (var "ga" 583) (op "constant" 586))) ("var-exp" (Ga al) ((op "exp" 490) (var "Ga" 487) (var "al" 494)) ((op ":" 502) (var "Ga" 500) (op "varseq" 503)) ((op ":" 513) (var "al" 511) (op "variable" 514)) ((op "is-in" 527) (var "al" 524) (var "Ga" 533))) ("is-in" (mu nu) ((op "is-in" 434) (var "mu" 431) (var "nu" 440)) (sexp (cal-q-in mu nu))) ("varseq1" (Ga) ((op ":" 384) (var "Ga" 382) (op "varseq" 387)) ((op ":" 399) (var "Ga" 397) (op "nv-varseq" 400))) ("varseq0" () ((op ":" 350) () (op "varseq" 353))) ("nv-varseq2" (Ga al) ((op ":" 290) (qq ((svar "Ga") (unit (op "," 285)) (svar "al"))) (op "nv-varseq" 291)) ((op ":" 306) (var "Ga" 304) (op "nv-varseq" 307)) ((op ":" 320) (var "al" 318) (op "variable" 321))) ("nv-varseq1" (al) ((op ":" 229) (var "al" 227) (op "nv-varseq" 231)) ((op ":" 246) (var "al" 244) (op "variable" 247))) ("nonvoid" (mu) ((op ":" 170) (var "mu" 168) (op "nonvoid" 171)) (sexp (cal-q-nonvoid-p mu))) ("constant" (ga) ((op ":" 76) (var "ga" 74) (op "constant" 77)) (sexp (cal-q-exp-const-p ga (quote ("в┐" "в╩" "в╦" "в╠" "в▌" "nil"))))) ("variable" (al) ((op ":" 23) (var "al" 21) (op "variable" 24)) (sexp (cal-q-var-p al)))) t)


(setq PEP PrimExpPat)